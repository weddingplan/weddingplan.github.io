body {
  display: flex;
  min-height: 100vh;
  flex-direction: column; }

main {
  flex: 1; }

div.questions {
  justify-content: center; }

div.question {
  justify-content: center; }

div.modal-container {
  color: #333;
  justify-content: center;
  text-align: center; }

div.container {
  justify-content: center; }

span.progress {
  margin: 0;
  padding: 0;
  height: 0; }

div.header {
  margin: 1rem; }

.stages {
  font-size: 0;
  text-align: justify; }

.stages:after {
  content: '';
  display: inline-block;
  font-size: 0;
  text-align: justify;
  width: 100%; }

input[type="radio"] {
  display: none; }

.stages label {
  box-sizing: content-box;
  background: #ffffff;
  border: solid 5px #c0c0c0;
  border-radius: 50%;
  cursor: pointer;
  display: inline-block;
  font-size: 0;
  font-weight: 700;
  height: 50px;
  line-height: 50px;
  position: relative;
  text-align: center;
  vertical-align: top;
  width: 50px;
  z-index: 1;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.stages label:after {
  content: '\2713';
  color: #0cc39f;
  display: inline-block;
  font-size: 16px; }

#one:checked ~ .stages label[for="one"],
#two:checked ~ .stages label[for="two"],
#three:checked ~ .stages label[for="three"],
#four:checked ~ .stages label[for="four"],
#five:checked ~ .stages label[for="five"],
#six:checked ~ .stages label[for="six"] {
  border-color: #0cc39f; }

.stages label.active {
  border-color: purple !important; }

#one:checked ~ .stages label,
#two:checked ~ .stages label[for="one"] ~ label,
#three:checked ~ .stages label[for="two"] ~ label,
#four:checked ~ .stages label[for="three"] ~ label,
#five:checked ~ .stages label[for="four"] ~ label,
#six:checked ~ .stages label[for="five"] ~ label {
  font-size: 1rem; }

#one:checked ~ .stages label:after,
#two:checked ~ .stages label[for="one"] ~ label:after,
#three:checked ~ .stages label[for="two"] ~ label:after,
#four:checked ~ .stages label[for="three"] ~ label:after,
#five:checked ~ .stages label[for="four"] ~ label:after,
#six:checked ~ .stages label[for="five"] ~ label:after {
  display: none; }

.progress > span {
  background: #c0c0c0;
  display: inline-block;
  height: 5px;
  transform: translateY(-2.75em);
  transition: 0.3s;
  width: 0; }

#two:checked ~ .progress span {
  width: calc(100% / 5 * 1); }

#three:checked ~ .progress span {
  width: calc(100% / 5 * 2); }

#four:checked ~ .progress span {
  width: calc(100% / 5 * 3); }

#five:checked ~ .progress span {
  width: calc(100% / 5 * 4); }

#six:checked ~ .progress span {
  width: calc(100% / 5 * 5); }

#one:checked ~ .panels [data-panel="one"],
#two:checked ~ .panels [data-panel="two"],
#three:checked ~ .panels [data-panel="three"],
#four:checked ~ .panels [data-panel="four"],
#five:checked ~ .panels [data-panel="five"],
#six:checked ~ .panels [data-panel="six"] {
  display: block; }

/* Custom code for the demo */
html, body {
  height: 100%; }

a {
  color: #0cc39f; }

h2,
h4 {
  margin-top: 0; }

div.panel-container {
  height: 65vh;
  /* Set your own height: percents, ems, whatever! */
  width: 50%;
  /* Set your own width: percents, ems, whatever! */
  overflow: auto;
  /* Recommended in case content is larger than the container */
  margin: auto;
  /* Center the item vertically & horizontally */
  top: 15vh;
  left: 0;
  bottom: 0;
  right: 0;
  /* Set the bounds in which to center it, relative to its parent/container */
  width: 80vw; }

div.questions {
  height: 65vh;
  /* Set your own height: percents, ems, whatever! */
  width: 50%;
  /* Set your own width: percents, ems, whatever! */
  overflow: auto;
  /* Recommended in case content is larger than the container */
  margin: auto;
  /* Center the item vertically & horizontally */
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  /* Set the bounds in which to center it, relative to its parent/container */
  width: 80vw; }

div.question {
  height: 65vh;
  /* Set your own height: percents, ems, whatever! */
  width: 50%;
  /* Set your own width: percents, ems, whatever! */
  overflow: auto;
  /* Recommended in case content is larger than the container */
  margin: auto;
  /* Center the item vertically & horizontally */
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  /* Set the bounds in which to center it, relative to its parent/container */
  width: 80vw;
  align-items: center; }

.form {
  height: 85vh;
  background: #ffffff;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4);
  margin: 0 2rem 0 2rem;
  padding: 1rem; }

input {
  box-sizing: border-box;
  display: block; }

button {
  background-color: #0cc39f;
  border: 0;
  color: #ffffff;
  cursor: pointer;
  font-weight: 700; }

button:hover {
  opacity: 0.8; }



/*# sourceMappingURL=app.css.map*/